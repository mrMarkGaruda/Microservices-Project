meta {
  name: 1. OAuth Token Endpoint - Regular User Login (Valid Credentials)
  type: http
  seq: 3
}

post {
  url: {{monolith_service_base_url}}/oauth/token
  body: json
  auth: none
}

body:json {
  {
    "email": "{{test_user_email}}",
    "password": "{{test_user_password}}"
  }
}

tests {
  test("Status code is 200", function () {
      expect(res.getStatus()).to.equal(200);
  });
  
  test("Response contains access_token, token_type, expires_in", function () {
      const response = res.getBody();
      expect(response).to.have.all.keys('access_token', 'token_type', 'expires_in');
      expect(response.access_token).to.be.a('string').and.to.not.be.empty;
      expect(response.token_type).to.eql('bearer');
      expect(response.expires_in).to.be.a('number').and.to.be.above(0);
  });
  
  // Store the access token for subsequent requests
  bru.setEnvVar("access_token", res.getBody().access_token);
}
